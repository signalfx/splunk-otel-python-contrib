apiVersion: apps/v1
kind: Deployment
metadata:
  name: travel-planner
  namespace: travel-planner
  labels:
    app: travel-planner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: travel-planner
  template:
    metadata:
      labels:
        app: travel-planner
    spec:
      containers:
        - name: travel-planner
          image: shuniche855/travel-planner:0.0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            # Load OpenAI API key from secret
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-api-keys
                  key: openai-api-key
            # Service Name
            - name: OTEL_SERVICE_NAME
              value: "opentelemetry-python-langchain-multi-agent-in-house"
            # Additional OTEL configuration
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "deployment.environment=o11y-inframon-ai"
            - name: SPLUNK_OTEL_AGENT
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://$(SPLUNK_OTEL_AGENT):4317"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "grpc"
            - name: HOME
              value: "/tmp"
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: "DELTA"
            - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
              value: "true"
            - name: OTEL_PYTHON_EXCLUDED_URLS
              value: "^(https?://)?[^/]+(/health)?$"
            - name: OTEL_INSTRUMENTATION_GENAI_CAPTURE_MESSAGE_CONTENT
              value: "true"
            - name: OTEL_INSTRUMENTATION_GENAI_CAPTURE_MESSAGE_CONTENT_MODE
              value: "SPAN_AND_EVENT"
            - name: OTEL_INSTRUMENTATION_GENAI_EVALS_RESULTS_AGGREGATION
              value: "true"
            - name: OTEL_INSTRUMENTATION_GENAI_EMITTERS
              value: "span_metric_event,splunk"
            - name: OTEL_INSTRUMENTATION_GENAI_EMITTERS_EVALUATION
              value: "replace-category:SplunkEvaluationResults"
            - name: OTEL_GENAI_EVAL_DEBUG_SKIPS
              value: "true"
            - name: OTEL_GENAI_EVAL_DEBUG_EACH
              value: "true"
            - name: OTEL_INSTRUMENTATION_GENAI_DEBUG
              value: "true"
            - name: SPLUNK_PROFILER_ENABLED
              value: "true"
            # Set evaluation wait time to 10 seconds (short enough to avoid health check timeout)
            - name: EVAL_WAIT_SECONDS
              value: "10"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: travel-planner-service
  namespace: travel-planner
spec:
  selector:
    app: travel-planner
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP
